/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.USPSAdminRole;

import EcoSystem.DeliveryVans.DeliveryVans;
import EcoSystem.EcoSystem;
import EcoSystem.Enterprise.USPS;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mustansir
 */
public class ManageDeliveryVansJPanel extends javax.swing.JPanel {

    private USPS usps;
    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    public ManageDeliveryVansJPanel(JPanel upc , USPS usps , EcoSystem ecoSystem) {
        initComponents();
        this.usps = usps;
        this.userProcessContainer = upc;
        this.ecoSystem = ecoSystem;
        populateVanTable();
    }
    
    private void populateVanTable(){
        DefaultTableModel model=(DefaultTableModel)deliveryVanTable.getModel();
        model.setRowCount(0);
        for(DeliveryVans dv : usps.getDeliveryVanDirectory().getDeliveryVanList()){
            Object[] row = new Object[3];
            row[0]=dv;
            row[1]=dv.getDriver() == null ? "Not Assigned " : dv.getDriver();
            row[2]=dv.getTotalCapacity();
            model.addRow(row);
                 
        }
        
    }
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryVanTable = new javax.swing.JTable();
        CreateDeliveryVan = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        deliveryVanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Licence Number", "Driver", "Total Capacity(liters)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(deliveryVanTable);

        CreateDeliveryVan.setText("Create Delivery Van");
        CreateDeliveryVan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateDeliveryVanActionPerformed(evt);
            }
        });

        jButton2.setText("Assign Driver Delivery Van");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(CreateDeliveryVan, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addGap(163, 163, 163))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(CreateDeliveryVan)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(27, 27, 27)
                .addComponent(backButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void CreateDeliveryVanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateDeliveryVanActionPerformed
        usps.getDeliveryVanDirectory().createandAddVans();
        populateVanTable();
    }//GEN-LAST:event_CreateDeliveryVanActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedItem = deliveryVanTable.getSelectedRow();
        if(selectedItem < 0){
            JOptionPane.showMessageDialog(null, "Please select a Bus to assign a driver to ");
            return;
        }
        DeliveryVans dv = (DeliveryVans)deliveryVanTable.getValueAt(selectedItem, 0);
        if(dv.getDriver() != null){
            JOptionPane.showMessageDialog(null, "A driver is already Assigned ");
            return;
        }
        AssignDriverJPanel assignDriverJPanel = new AssignDriverJPanel(userProcessContainer, usps, dv, ecoSystem);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add("Manage Delivery Vans", assignDriverJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        populateVanTable();
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateDeliveryVan;
    private javax.swing.JButton backButton;
    private javax.swing.JTable deliveryVanTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
