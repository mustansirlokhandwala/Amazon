/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SupplierPackagingRole;

import EcoSystem.EcoSystem;
import EcoSystem.Enterprise.Enterprise;
import EcoSystem.Enterprise.Supplier;
import EcoSystem.Enterprise.USPS;
import EcoSystem.Network.Network;
import EcoSystem.UserAccount.UserAccount;
import EcoSystem.WorkQueue.InvoiceGenerationRequest;
import EcoSystem.WorkQueue.OrderRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JPanel;

/**
 *
 * @author Mustansir
 */
public class ProcessOrderItemJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private OrderRequest orderRequest;
    private EcoSystem ecoSystem;
    private Supplier supplier;
    private UserAccount userAccount;
    public ProcessOrderItemJPanel(JPanel upc , OrderRequest or , EcoSystem ecoSystem , Supplier supplier , UserAccount userAccount) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.orderRequest = or;
        this.userProcessContainer = upc;
        this.supplier = supplier;
        this.userAccount = userAccount;
        populateForm();
                 
    }
    
    private void populateForm(){
        productNameTxtField.setText(orderRequest.getOrderItem().getProductInventory().getProduct().getName());
        volumeTxtField.setText(String.valueOf(orderRequest.getOrderItem().getProductInventory().getProduct().getProductVolume()));
        quantityTxtField.setText(String.valueOf(orderRequest.getOrderItem().getQuantity()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        productNameTxtField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        volumeTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        quantityTxtField = new javax.swing.JTextField();
        processJbutton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        jLabel1.setText("Product :");

        productNameTxtField.setEditable(false);

        jLabel2.setText("Volume");

        volumeTxtField.setEditable(false);

        jLabel3.setText("Quantity");

        quantityTxtField.setEditable(false);

        processJbutton.setText("Process ");
        processJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJbuttonActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(volumeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(productNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backButton)
                            .addGap(46, 46, 46)
                            .addComponent(processJbutton))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(productNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(volumeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(processJbutton)
                    .addComponent(backButton))
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void processJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJbuttonActionPerformed
        orderRequest.setPackaged(true);
        orderRequest.setPackageDate(new Date());
        InvoiceGenerationRequest invoiceRequest = new InvoiceGenerationRequest();
        invoiceRequest.setOrderItem(orderRequest.getOrderItem());
        invoiceRequest.setSender(userAccount);
        
        supplier.getWorkQueue().addWorkRequest(invoiceRequest);
        
        String country = supplier.getAddress().getCountry();
        String state = supplier.getAddress().getState();
        String city = supplier.getAddress().getCity();
        
        
        
        for(Network countryNetwork : ecoSystem.getNetworkDirectory().getNetworkList()){
            if(countryNetwork.getName().equals(country)){
                for(Network stateNetwork : countryNetwork.getNetworkDirectory().getNetworkList()){
                    if(stateNetwork.getName().equals(state)){
                        for(Network cityNetwork : stateNetwork.getNetworkDirectory().getNetworkList()){
                            if(cityNetwork.getName().equals(city)){
                                for(Enterprise enterprise : cityNetwork.getEnterpriseDirectory().getEnterpriseList()){
                                    if(enterprise instanceof USPS){
                                        enterprise.getWorkQueue().addWorkRequest(orderRequest);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }         
    }//GEN-LAST:event_processJbuttonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       CardLayout layout = (CardLayout)userProcessContainer.getLayout();
       userProcessContainer.remove(this);
       layout.previous(userProcessContainer);

    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton processJbutton;
    private javax.swing.JTextField productNameTxtField;
    private javax.swing.JTextField quantityTxtField;
    private javax.swing.JTextField volumeTxtField;
    // End of variables declaration//GEN-END:variables
}
