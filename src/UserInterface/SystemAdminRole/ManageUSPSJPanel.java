/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SystemAdminRole;

import EcoSystem.EcoSystem;
import EcoSystem.Enterprise.Enterprise;
import EcoSystem.Enterprise.Enterprise.EnterpriseType;
import EcoSystem.Enterprise.USPS;
import EcoSystem.Network.Network;
import EcoSystem.Role.USPSAdminRole;
import EcoSystem.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mustansir
 */
public class ManageUSPSJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
            
    public ManageUSPSJPanel(JPanel upc , EcoSystem ecoSystem) {
        initComponents();
        this.ecoSystem = ecoSystem;
        this.userProcessContainer = upc;
        populateUSPSTable();
    }
    
    private  void populateUSPSTable(){
            DefaultTableModel model = (DefaultTableModel)uspsTable.getModel();
            model.setRowCount(0);
            ArrayList<USPS> uspsList = new ArrayList<USPS>();
            for(Network countryNetwork : ecoSystem.getNetworkDirectory().getNetworkList()){
                for(Network stateNetwork : countryNetwork.getNetworkDirectory().getNetworkList()){
                    for(Network cityNetwork : stateNetwork.getNetworkDirectory().getNetworkList()){
                        for(Enterprise enterprise : cityNetwork.getEnterpriseDirectory().getEnterpriseList()){
                            if(enterprise.getEnterpriseType().equals(EnterpriseType.USPS)){
                                uspsList.add((USPS)enterprise);
                            }
                        }
                    }
                }
            }
                
            for(USPS usps : uspsList){
                Object[] row = new Object[2];
                row[0]=usps;
                row[1]=usps.getAddress();
                model.addRow(row);
            }
     
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        uspsTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        uspsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name ", "Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(uspsTable);

        jButton1.setText("Create a New USPS office");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Create USPS Admin");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(106, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        populateUSPSTable();
    }//GEN-LAST:event_formComponentShown

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        USPSofficeCreateJPanel uspssofficeCreateJPanel = new USPSofficeCreateJPanel(userProcessContainer, ecoSystem);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add("USPS office", uspssofficeCreateJPanel);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selectedItem = uspsTable.getSelectedRow();
        if(selectedItem < 0){
            JOptionPane.showMessageDialog(null, "Please select an Office ");
            return;
        }
        USPS usps = (USPS)uspsTable.getValueAt(selectedItem, 0);
        for(UserAccount ua : usps.getUserAccountDirectory().getUserAccountList()){
            if(ua.getRole() instanceof  USPSAdminRole){
                JOptionPane.showMessageDialog(null,"Admin for this Office Already Exists");
                        return;
            }
        }
        CreateUSPSAdminJPanel createUSPSAdminJPanel = new CreateUSPSAdminJPanel(userProcessContainer, ecoSystem, usps);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.add("USPS office", createUSPSAdminJPanel);
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable uspsTable;
    // End of variables declaration//GEN-END:variables
}
