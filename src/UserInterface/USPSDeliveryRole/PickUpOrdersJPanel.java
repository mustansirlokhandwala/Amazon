/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.USPSDeliveryRole;

import EcoSystem.DeliveryVans.DeliveryVans;
import EcoSystem.Enterprise.USPS;
import EcoSystem.WorkQueue.OrderRequest;
import EcoSystem.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mustansir
 */
public class PickUpOrdersJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private USPS usps;
    private DeliveryVans deliveryVans;
    
    public PickUpOrdersJPanel(JPanel upc , USPS usps , DeliveryVans deliveryVans) {
        initComponents();
        this.userProcessContainer = upc ;
        this.usps = usps;
        this.deliveryVans = deliveryVans;
        populatePickupTable();
    }
    
    private void populatePickupTable(){
        DefaultTableModel model = (DefaultTableModel)pickupTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest wr : deliveryVans.getPickupQueue().getWorkQueueList()){
            OrderRequest or = (OrderRequest)wr;
            
            Object[] row = new Object[5];
            row[0]=or;
            row[1]=or.getOrderItem().getProductInventory().getProduct().getProductCompany().getAddress();
            row[2]=or.getPackageDate();
            row[3]=or.isShipped() == false ? "Not picked up " : or.getShipmentDate();
            row[4]=or.getDeliveryEmployee() == null ? " Not assigned" : or.getDeliveryEmployee();            
            model.addRow(row);
                    
            
        }  
            
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pickupTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();

        pickupTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "Cus's Add", "Package Date", "Pickup Status", "Assigned to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pickupTable);

        jButton1.setText("Pick up ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BackButton.setText("<< Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(BackButton))
                .addContainerGap(134, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedItem = pickupTable.getSelectedRow();
        if(selectedItem < 0){
            JOptionPane.showMessageDialog(null, "Please select a order to be picked up");
            return;
        }
        OrderRequest or = (OrderRequest)pickupTable.getValueAt(selectedItem, 0);
        
        or.setShipped(true);
        or.setShipmentDate(new Date());
        deliveryVans.getPickupQueue().getWorkQueueList().remove(or);
        deliveryVans.getDeliveryQueue().addWorkRequest(or);
        populatePickupTable();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable pickupTable;
    // End of variables declaration//GEN-END:variables
}
