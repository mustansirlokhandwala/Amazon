/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.USPSDeliveryRole;

import EcoSystem.DeliveryVans.DeliveryVans;
import EcoSystem.Enterprise.USPS;
import EcoSystem.UserAccount.UserAccount;
import EcoSystem.WorkQueue.OrderRequest;
import EcoSystem.WorkQueue.OrderReturn;
import EcoSystem.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mustansir
 */
public class StorePickUpJpanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private USPS usps;
    private UserAccount userAccount;
    private DeliveryVans dv;
    public StorePickUpJpanel(JPanel upc , USPS usps , UserAccount userAccount, DeliveryVans dv) {
        initComponents();
        this.userProcessContainer = upc;
        this.usps = usps;
        this.userAccount = userAccount;
        this.dv = dv;
        populateDeliveryTable();
    }
    
    private void populateDeliveryTable(){
        DefaultTableModel model = (DefaultTableModel)deliveryPickUpTable.getModel();
        model.setRowCount(0);
        
        for(WorkRequest wr : usps.getWorkQueue().getWorkQueueList()){
            if(wr instanceof OrderReturn){
            OrderReturn or = (OrderReturn)wr;
            
            Object[] row = new Object[5];
            row[0]=or;
            row[1]=or.getCustomer().getPerson().getAddress();
            row[2]=or.getCustomerDropOff();
            row[3]=or.getCustomer();
            row[4]=or.getDeliveryEmployee() == null ? " Not assigned" : or.getDeliveryEmployee();
            
            model.addRow(row);    
            }
            
                    
            
        }  
            
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryPickUpTable = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        assignToMeJbutton = new javax.swing.JButton();

        deliveryPickUpTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "Cus's Add", "Package Date", "Packed by", "Assigned to"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(deliveryPickUpTable);

        BackButton.setText("<< Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        assignToMeJbutton.setText("Assign To Me");
        assignToMeJbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(assignToMeJbutton)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeJbutton)
                    .addComponent(BackButton))
                .addContainerGap(116, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void assignToMeJbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJbuttonActionPerformed
        int selectedRow = deliveryPickUpTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a a Delivery order");
            return;
        }
        OrderReturn or = (OrderReturn)deliveryPickUpTable.getValueAt(selectedRow, 0);
        if(or.getDeliveryEmployee() != null){
            JOptionPane.showMessageDialog(null, "This Order has Already been assigned ");
            return;
        }
        or.setDeliveryEmployee(userAccount);
        populateDeliveryTable();
        dv.getDeliveryQueue().addWorkRequest(or);

    }//GEN-LAST:event_assignToMeJbuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton assignToMeJbutton;
    private javax.swing.JTable deliveryPickUpTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
