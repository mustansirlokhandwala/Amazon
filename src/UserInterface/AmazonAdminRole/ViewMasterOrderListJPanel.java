/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.AmazonAdminRole;

import EcoSystem.Enterprise.Amazon;
import EcoSystem.WorkQueue.OrderRequest;
import EcoSystem.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mustansir
 */
public class ViewMasterOrderListJPanel extends javax.swing.JPanel {

   private JPanel userProcessContainer;
   private Amazon amazon;
    public ViewMasterOrderListJPanel(JPanel userProcessContainer , Amazon amazon) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.amazon = amazon;
        populateOrderTable();
    }
    public void populateOrderTable(){
        DefaultTableModel model = (DefaultTableModel)OrderTable.getModel();
        model.setRowCount(0);
        for(WorkRequest wr : amazon.getWorkQueue().getWorkQueueList()){
            OrderRequest or = (OrderRequest)wr;
            Object[] row = new Object[5];
            row[0]=or;
            row[1]=or.getOrderItem().getProductInventory().getProduct().getProductCompany();
            row[2]=or.getOrderItem().getProductInventory().getProduct().getProductPrice();
            row[3]=or.getOrderItem().getQuantity();
            row[4]=or.getCustomer();
            model.addRow(row);
        }
    }
    
    public void populateOrderStatusTable(OrderRequest or)
    {
        DefaultTableModel model = (DefaultTableModel)OrderStatusTable.getModel();
        model.setRowCount(0);
        
            
            Object[] row = new Object[4];
            row[0]=or.isOrdered()== false ? "Pedning" : or.getOrderDate();
            row[1]=or.isPackaged() == false ? "Pending" : or.getPackageDate();
            row[2]=or.isShipped() == false ? "Pending" : or.getShipmentDate();
            row[3]=or.isDelivered() == false ? "Pending" : or.getDeliveryDate();
            model.addRow(row);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderStatusTable = new javax.swing.JTable();
        backButton = new javax.swing.JButton();

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "Product Compnay", "Price", "Quantity", "Customer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderTable);

        OrderStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ordered", "Packaged", "Shipped", "Delivered"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(OrderStatusTable);

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(backButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void OrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseClicked
        int selectedRow = OrderTable.getSelectedRow();
        OrderRequest or =(OrderRequest)OrderTable.getValueAt(selectedRow, 0);
        populateOrderStatusTable(or);

    }//GEN-LAST:event_OrderTableMouseClicked

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderStatusTable;
    private javax.swing.JTable OrderTable;
    private javax.swing.JButton backButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
